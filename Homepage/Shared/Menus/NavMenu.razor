@using System.Linq

@inject IMenuService MenuService;
@inject NavigationManager NavigationManager;

<MudText Typo="Typo.subtitle1" Class="mt-1 mb-2 ml-2 d-flex d-md-none"><b>Commands</b></MudText>
<MudNavLink Href="commands/overview" Class="docs-single-link">Getting Started</MudNavLink>
<MudNavGroup Title="Slash Commands" Expanded="@(_section == "slash-commands")" ExpandIcon="@Icons.Material.Filled.ExpandMore">
    @foreach (var item in MenuService.SlashCommands)
    {
        if (item.IsNavGroup)
        {
            <MudNavGroup Title="@item.Name" Expanded="@(IsSubGroupExpanded(item))" ExpandIcon="@Icons.Material.Filled.ExpandMore">
                @foreach (var subItem in item.GroupCommands)
                {
                    var href = $"slash-commands/{subItem.Link}";
                    <MudNavLink Href="@href">@subItem.Name</MudNavLink>
                }
            </MudNavGroup>
        }
        else
        {
            var href = $"slash-commands/{item.Link}";
            <MudNavLink Href="@href">@item.Name</MudNavLink>
        }
    }
</MudNavGroup>
<MudNavGroup Title="Message Commands" Expanded="@(_section == "message-commands")" ExpandIcon="@Icons.Material.Filled.ExpandMore">
    @foreach (var item in MenuService.MessageCommands.OrderBy(x => x.Name))
    {
        var href = $"message-commands/{item.Link}";
        <MudNavLink Href="@href">@item.Name</MudNavLink>
    }
</MudNavGroup>
<MudNavGroup Title="User Commands" Expanded="@(_section == "user-commands")" ExpandIcon="@Icons.Material.Filled.ExpandMore">
    @foreach (var item in MenuService.UserCommands)
    {
        string href = $"user-commands/{item.Link}";
        <MudNavLink Href="@href">@item.Name</MudNavLink>
    }
</MudNavGroup>
<MudNavGroup Title="Hidden Commands" Expanded="@(_section == "hidden-commands")" ExpandIcon="@Icons.Material.Filled.ExpandMore">
    @foreach (var item in MenuService.HiddenCommands)
    {
        string href = $"hidden-commands/{item.Link}";
        <MudNavLink Href="@href">@item.Name</MudNavLink>
    }
</MudNavGroup>

@code {
    private string _section = string.Empty;
    private string _commandLink = string.Empty;

    protected override void OnInitialized()
    {
        Refresh();
        base.OnInitialized();
    }

    public void Refresh()
    {
        _section = NavigationManager.GetSection();
        _commandLink = NavigationManager.GetCommandLink();

        StateHasChanged();
    }

    bool IsSubGroupExpanded(BotCommand item)
    {
        return item.GroupCommands.Any(i => i.Link == _commandLink);
    }
}