@inject IRenderQueueService QueueService

<CascadingValue Value="this" IsFixed="true">
    <QueuedContent RenderImmediately="_renderImmediately">
        <div @attributes="UserAttributes">
            @ChildContent
        </div>
    </QueuedContent>
</CascadingValue>

@code{
    [CascadingParameter] CommandPage CommandPage { get; set; } = null!;
    [CascadingParameter] public PageSection? ParentSection { get; protected set; }

    [Parameter] public RenderFragment? ChildContent { get; set; }    
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object?> UserAttributes { get; set; } = [];

    private bool _renderImmediately = false;

    public int Level { get; private set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var count = CommandPage.IncrementSectionCount();
        
        _renderImmediately = count < QueueService.Capacity;

        Level = (ParentSection?.Level ?? -1) + 1;
    }
}