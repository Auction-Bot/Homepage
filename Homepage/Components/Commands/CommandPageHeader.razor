@using System.Text.RegularExpressions;

<PageTitle>@(GetTitle())</PageTitle>

@inject NavigationManager NavigationManager
@inject IMenuService MenuService

<HeadContent>
    <meta Name="keywords" Content="@GetKeywords()" />
    <meta Property="og:title" Content="@GetTitle()" />

    @if (!string.IsNullOrEmpty(SubTitle))
    {
        <meta Name="description" Content="@(SubTitle)" />
        <meta Property="og:description" Content="@SubTitle" />
    }
</HeadContent>

@if (SpecialHeaderContent != null)
{
    <div class="my-16">
        @SpecialHeaderContent
    </div>
}
else
{
    <div class="mt-6 mb-12">
        <MudText Typo="@Typography">@Title</MudText>
        <MudText>@GetSubTitle() @Description</MudText>
    </div>
}

@code {
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? SubTitle { get; set; }
    [Parameter] public string? Keywords { get; set; }
    [Parameter] public RenderFragment? Description { get; set; }
    [Parameter] public RenderFragment? SpecialHeaderContent { get; set; }
    [Parameter] public string? ComponentLink { get; set; }
    [Parameter] public Typo Typography { get; set; } = Typo.h3;


    public string? _componentName;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        _componentName = NavigationManager.Uri.ToString().Split('/', StringSplitOptions.RemoveEmptyEntries).LastOrDefault();
    }   

    private string GetComponentLink()
    {
        // if (_component?.Type != null)
        //     return $"components/{_component?.Link}";
        // return $"components/{_parentComponent?.Link}";

        return string.Empty;
    }

    string GetTitle() => $"{Title} - Auction Bot";

    string GetSubTitle()
    {
        if (string.IsNullOrEmpty(SubTitle))
            return "";
        return SubTitle.TrimEnd('.') + ".";
    }

    string GetKeywords()
    {
        var keywords = new HashSet<string>(Regex.Split(Keywords ?? "", @",\s"));
        keywords.Add("Auction Bot");
        keywords.Add("agora");
        keywords.Add("auction");
        keywords.Add("market");
        keywords.Add("giveaway");
        keywords.Add("trade");
        keywords.Add("raffle");
        keywords.Add("discord");
        keywords.Add("discord auction");
        keywords.Remove("");
        return string.Join(", ", keywords);
    }
}