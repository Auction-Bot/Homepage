@page "/dashboard/{guildId}"

@layout DashboardLayout

@inject ISecuredApiService ApiService
@inject NavigationManager Navigation
@inject CurrentUserService CurrentUser

<MudMainContent>
    <MudContainer Class="mt-6 mb-8" MaxWidth="MaxWidth.Large">
        <MudPaper Class="px-16 py-4 ma-2" Elevation="3" Outlined="true">
            <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center" Row="true" Spacing="3">
                @if (Guild is null)
                {
                    <MudText Typo="Typo.h6">"Unable to load the selected guild"</MudText>
                }
                else
                {
                    <MudMenu FullWidth="true" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.BottomCenter">
                        <ActivatorContent>
                            <MudStack Row="true" AlignItems="AlignItems.Center" Style="min-width:150px;">
                                <MudAvatar Size="Size.Medium" Color="Color.Dark">
                                    <ChildContent>
                                        <MudImage Src=@GetGuildAvatar()></MudImage>
                                    </ChildContent>
                                </MudAvatar>
                                <MudText Typo="Typo.h6">@Guild.Name</MudText>
                                <MudIcon Icon="@Icons.Material.Filled.KeyboardArrowDown" />
                            </MudStack>
                        </ActivatorContent>
                        <ChildContent>
                            <MudMenuItem OnClick="() => null!">Settings</MudMenuItem>
                            <MudMenuItem OnClick="() => null!">Currencies</MudMenuItem>
                            <MudMenuItem OnClick="() => null!">Categories</MudMenuItem>
                        </ChildContent>
                    </MudMenu>  
                }
            </MudStack>
            <MudGrid Class="pt-4">
                <MudItem md="8" sm="12" xs="12">
                    @* <GoalsCarousel ActiveBudget="AppState.HasActiveBudget"/> *@
                    <MudPaper Class="mud-secondary d-flex flex-column justify-space-between pa-4" Elevation="2" Style="height: 150px;">

                    </MudPaper>
                </MudItem>
                <MudItem md="4" sm="12" xs="12">
                    @* <UpcomingCarousel/> *@
                    <MudPaper Class="mud-primary d-flex flex-column justify-space-between pa-4" Elevation="2" Style="height: 150px; color: whitesmoke">

                    </MudPaper>
                </MudItem>
                <MudItem md="4" sm="12" xs="12">
                    <MudPaper Class="mud-tertiary d-flex flex-column justify-space-between pa-4" Elevation="2" Style="height: 150px;">

                    </MudPaper>
                </MudItem>
                <MudItem md="4" sm="12" xs="12">
                    <MudPaper Class="mud-tertiary d-flex flex-column justify-space-between pa-4" Elevation="2" Style="height: 150px;">

                    </MudPaper>
                </MudItem>
                <MudItem md="4" sm="12" xs="12">
                    <MudPaper Class="mud-tertiary d-flex flex-column justify-space-between pa-4" Elevation="2" Style="height: 150px;">

                    </MudPaper>
                </MudItem>
                <MudItem md="4" sm="12" xs="12">
                    <MudPaper Class="mud-tertiary d-flex flex-column justify-space-between pa-4" Elevation="2" Style="height: 150px;">

                    </MudPaper>
                </MudItem>
                <MudItem md="4" sm="12" xs="12">
                    <MudPaper Class="mud-tertiary d-flex flex-column justify-space-between pa-4" Elevation="2" Style="height: 150px;">

                    </MudPaper>
                </MudItem>
                <MudItem md="12" sm="12" xs="12">
                    @* <RecentTransactions/> *@
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudContainer>
</MudMainContent>

@code{
    [ParameterAttribute] public string GuildId { get; set; } = null!;

    private Guild? Guild { get; set; }

    protected override Task OnInitializedAsync()
    {
        if (ulong.TryParse(GuildId, out var guildId))
            Guild = CurrentUser.Data.Guilds!.First(guild => guild.Id == guildId);

        return base.OnInitializedAsync();
    }

    private string GetGuildAvatar() => $"https://cdn.discordapp.com/icons/{Guild!.Id}/{Guild.Icon}.png";
}